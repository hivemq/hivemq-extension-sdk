plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.hierynomus.license'
    id 'com.jfrog.bintray'
    id 'com.github.sgtsilvio.gradle.metadata'
}


/* ******************** metadata ******************** */

group = 'com.hivemq'
description = 'SDK for the development of HiveMQ extensions'

metadata {
    readableName = 'HiveMQ Extension SDK'
    organization {
        name = 'dc-square GmbH'
        url = 'https://www.hivemq.com/'
    }
    license {
        apache2()
    }
    developers {
        developer {
            it.id = 'cschaebe'
            it.name = 'Christoph Schaebel'
            it.email = 'christoph.schaebel@hivemq.com'
        }
        developer {
            it.id = 'lbrandl'
            it.name = 'Lukas Brandl'
            it.email = 'lukas.brandl@hivemq.com'
        }
        developer {
            it.id = 'flimpoeck'
            it.name = 'Florian Limpoeck'
            it.email = 'florian.limpoeck@hivemq.com'
        }
        developer {
            it.id = 'sauroter'
            it.name = 'Georg Held'
            it.email = 'georg.held@hivemq.com'
        }
        developer {
            it.id = 'SgtSilvio'
            it.name = 'Silvio Giebl'
            it.email = 'silvio.giebl@hivemq.com'
        }
    }
    github {
        org = 'hivemq'
        repo = 'hivemq-extension-sdk'
        issues()
    }
}


/* ******************** dependencies ******************** */

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: property('metrics.version')
    compile group: 'org.slf4j', name: 'slf4j-api', version: property('slf4j.version')
}


/* ******************** java ******************** */

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Jar) {
    manifest {
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Vendor': metadata.organization.name
        attributes 'Implementation-Version': project.version
    }
}

tasks.javadoc {
    title = "${metadata.readableName} ${project.version} API"

    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'

    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('-html5')
    options.addBooleanOption('-no-module-directories', true)

    doLast {
        javaexec {
            main = '-jar'
            args = ["${projectDir}/gradle/tools/javadoc-cleaner-1.0.jar"]
        }
    }
}


/* ******************** publishing ******************** */

publishing {
    publications {
        extensionSdk(MavenPublication) {
            from components.java
        }
    }
}

bintray {
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
    publications = publishing.publications.withType(MavenPublication).stream().collect { it.name }
    dryRun = false
    publish = false
    override = false
    pkg {
        userOrg = 'hivemq'
        repo = 'HiveMQ'
        name = 'hivemq-extension-sdk'
        desc = project.description
        websiteUrl = metadata.url
        issueTrackerUrl = metadata.issueManagement.url
        vcsUrl = metadata.scm.url
        licenses = [metadata.license.shortName]
        labels = ['hivemq', 'extension', 'sdk', 'mqtt', 'mqtt5']
        publicDownloadNumbers = false
        version {
            released = new Date()
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = false
                user = project.findProperty('mavenCentralUser') ?: System.getenv('MAVEN_CENTRAL_USER')
                password = project.findProperty('mavenCentralKey') ?: System.getenv('MAVEN_CENTRAL_KEY')
                close = '0'
            }
        }
    }
}


/* ******************** checks ******************** */

license {
    header = file("${projectDir}/HEADER")
    mapping('java', 'SLASHSTAR_STYLE')
}
